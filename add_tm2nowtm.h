/*author:plapacz6@gmail.com, data:2023-01-03, licence: GPLv3*/
#ifndef ADD_TM2NOWTM_H
#define ADD_TM2NOWTM_H

#include <time.h>

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief strut similiar to struct tm form <time.h>, purpose: for amounts of time
 * 
 * difference from strut tm:  
 * struct tm contain values generated by time system
 * this struct contain amounth of time
 */
 typedef struct tmA {
  
  // int tm_isdst; /**<- calcualted*/
  // int tm_yday;  /**<- calcualted*/
  // int tm_wday;  /**<- calcualted*/
  // int tm_year;    /**<- editable*/
  // int tm_mon;     /**<- editable*/
  int tm_day;    /**<- editable*/
  int tm_hour;    /**<- editable*/
  int tm_min;     /**<- editable*/
  int tm_sec;     /**<- editable*/
 } tmA_t;

/**
 * @brief add struct tm to tm stuct generated by time()
 * 
 * @param tm1 strumt tm with time expressed as amount of time
 * @return struct tm - resulting time 
 *         after adding current time and amount of time from arg
 */
struct tm add_tm2nowtm(const struct tmA tm2);

/**
 * @brief adds two struct tm structures regarding second tm as amounts of time
 * 
 * @param tm1 struct tm from <time.h>  - time to which some amount of time will be added
 * @param tm2 struct tm  - amount of time
 * @return struct tm with time being time from tm1 inceased by amoutn of time expressed in tm2 according to data-time rules
 */
struct tm add_tm2tm(const struct tm tm1, const struct tmA tm2);


#ifdef __cplusplus
}
#endif

#endif // ADD_TM2NOWTM_H